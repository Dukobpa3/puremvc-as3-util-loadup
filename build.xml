<?xml version="1.0"?>
<!--
	PureMVC Utility - Loadup
	Copyright (c) 2010 Philip Sexton <philip.sexton@puremvc.org>
	Your reuse is governed by the Creative Commons Attribution 3.0 License
-->
<!--
	Notes
	- Flex Ant Tasks requires that the flex home property be named FLEX_HOME
-->
<project name="Build Loadup" default="flex-std-swc" basedir=".">
	<description>Build the swc libraries for the Loadup Utility</description>

	<!-- ========== For these properties, set your own values ========= -->
	<property name="build.debug" value="false"/>
	<property name="FLEX_HOME" location="/Developer/SDKs/flex_sdk_3.4"/>
	<property name="puremvc.libs.dir" location="../../../../PureMVC/libs"/>
	<property name="output.dir" location="bin"/>

	<patternset id="common.source.files.pattern">
		<include name="**/LoadupMonitorProxy.as"/>
		<include name="**/LoadupResourceLoadedCommand.as"/>
		<include name="**/LoadupResourceFailedCommand.as"/>
		<include name="**/AssetFactory.as"/>
		<include name="**/AssetLoaderFactory.as"/>		
	</patternset>

	<pathconvert property="flex.standard.classes" pathsep=" ">
		<fileset dir="${basedir}/src">
			<patternset refid="common.source.files.pattern"/>
			<include name="**/FlexAssetTypeMap.as"/>
		</fileset>
		<packagemapper from="${basedir}/src/*.as" to="*"/>
	</pathconvert>

	<pathconvert property="flex.multicore.classes" pathsep=" ">
		<fileset dir="${basedir}/multicore">
			<patternset refid="common.source.files.pattern"/>
			<include name="**/FlexAssetTypeMap.as"/>
		</fileset>
		<packagemapper from="${basedir}/multicore/*.as" to="*"/>
	</pathconvert>

	<pathconvert property="flash.standard.classes" pathsep=" ">
		<fileset dir="${basedir}/src">
			<patternset refid="common.source.files.pattern"/>
			<include name="**/FlashAssetTypeMap.as"/>
		</fileset>
		<packagemapper from="${basedir}/src/*.as" to="*"/>
	</pathconvert>

	<pathconvert property="flash.multicore.classes" pathsep=" ">
		<fileset dir="${basedir}/multicore">
			<patternset refid="common.source.files.pattern"/>
			<include name="**/FlashAssetTypeMap.as"/>
		</fileset>
		<packagemapper from="${basedir}/multicore/*.as" to="*"/>
	</pathconvert>

	<taskdef resource="flexTasks.tasks" classpath="${FLEX_HOME}/ant/lib/flexTasks.jar" />

	<target name="flex-std-swc" description="Flex Standard Swc">
		<compc debug="${build.debug}"
			include-classes="${flex.standard.classes}"
			output="${output.dir}/Utility_AS3_Flex_Loadup_2_1.swc">
			<source-path path-element="${basedir}/src"/>
			<external-library-path file="${FLEX_HOME}/frameworks/libs/framework.swc" append="true"/>
			<external-library-path file="${puremvc.libs.dir}/PureMVC_AS3_2_0_4.swc" append="true"/>
		</compc>
	</target>
	<target name="flex-mc-swc" description="Flex MultiCore Swc">
		<compc debug="${build.debug}"
			include-classes="${flex.multicore.classes}"
			output="${output.dir}/Utility_AS3_Flex_MultiCore_Loadup_2_1.swc">
			<source-path path-element="${basedir}/multicore"/>
			<external-library-path file="${FLEX_HOME}/frameworks/libs/framework.swc" append="true"/>
			<external-library-path file="${puremvc.libs.dir}/PureMVC_AS3_MultiCore_1_0_5.swc" append="true"/>
		</compc>
	</target>
	<target name="flash-std-swc" description="Flash Standard Swc">
		<compc debug="${build.debug}"
			include-classes="${flash.standard.classes}"
			output="${output.dir}/Utility_AS3_Flash_Loadup_2_1.swc">
			<source-path path-element="${basedir}/src"/>
			<external-library-path file="${FLEX_HOME}/frameworks/libs/framework.swc" append="true"/>
			<external-library-path file="${puremvc.libs.dir}/PureMVC_AS3_2_0_4.swc" append="true"/>
		</compc>
	</target>
	<target name="flash-mc-swc" description="Flash MultiCore Swc">
		<compc debug="${build.debug}"
			include-classes="${flash.multicore.classes}"
			output="${output.dir}/Utility_AS3_Flash_MultiCore_Loadup_2_1.swc">
			<source-path path-element="${basedir}/multicore"/>
			<external-library-path file="${FLEX_HOME}/frameworks/libs/framework.swc" append="true"/>
			<external-library-path file="${puremvc.libs.dir}/PureMVC_AS3_MultiCore_1_0_5.swc" append="true"/>
		</compc>
	</target>
</project>
